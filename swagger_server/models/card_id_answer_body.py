# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CardIdAnswerBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, is_valid: bool=None):  # noqa: E501
        """CardIdAnswerBody - a model defined in Swagger

        :param is_valid: The is_valid of this CardIdAnswerBody.  # noqa: E501
        :type is_valid: bool
        """
        self.swagger_types = {
            'is_valid': bool
        }

        self.attribute_map = {
            'is_valid': 'isValid'
        }
        self._is_valid = is_valid

    @classmethod
    def from_dict(cls, dikt) -> 'CardIdAnswerBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The cardId_answer_body of this CardIdAnswerBody.  # noqa: E501
        :rtype: CardIdAnswerBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_valid(self) -> bool:
        """Gets the is_valid of this CardIdAnswerBody.

        True if user has answered correctly, false otherwise  # noqa: E501

        :return: The is_valid of this CardIdAnswerBody.
        :rtype: bool
        """
        return self._is_valid

    @is_valid.setter
    def is_valid(self, is_valid: bool):
        """Sets the is_valid of this CardIdAnswerBody.

        True if user has answered correctly, false otherwise  # noqa: E501

        :param is_valid: The is_valid of this CardIdAnswerBody.
        :type is_valid: bool
        """
        if is_valid is None:
            raise ValueError("Invalid value for `is_valid`, must not be `None`")  # noqa: E501

        self._is_valid = is_valid
